import pandas as pd
from datetime import datetime, timedelta
import math

# 读取 Excel 文件
file_path = "D://PHD//数据//data//new//白象1_time_1.xlsx"  # 修改为你的文件路径
df = pd.read_excel(file_path)

# 确保 "Real time" 列的第一个时间点是正确的，并转换为 datetime 格式
df["Real time"] = pd.to_datetime(df["Real time"], format="%H:%M:%S")
start_time = df.loc[0, "Real time"]  # 取第一个时间点作为起始

# 解析“持续时间（秒）”并向上取整
df["持续时间（秒）"] = df["持续时间（秒）"].astype(float).apply(math.ceil)  # 确保每个时间点至少 1 秒

# 目标时间间隔
TARGET_INTERVAL = 5
MIN_INTERVAL = 4
MAX_INTERVAL = 6

# 存储合并后的数据
merged_data = []
current_time = start_time  # 当前累计时间
temp_texts = []  # 存储当前合并的文本
temp_copies = []  # 存储当前合并的 copies

for i, row in df.iterrows():
    real_time = row["Real time"]
    text = str(row["文本"])
    copies = str(row["copies"])

    # 计算当前时间与合并起始时间的间隔
    time_diff = (real_time - current_time).total_seconds()

    if time_diff < MIN_INTERVAL:  # 如果时间间隔小于 4 秒，则继续合并
        temp_texts.append(text)
        temp_copies.append(copies)
    else:
        # 先保存之前合并的结果
        if temp_texts:
            merged_data.append([current_time.strftime("%H:%M:%S"), ", ".join(temp_texts), ", ".join(temp_copies)])

        # 重新开始新的合并段
        current_time = real_time  # 更新当前时间
        temp_texts = [text]
        temp_copies = [copies]

# 处理最后一组数据
if temp_texts:
    merged_data.append([current_time.strftime("%H:%M:%S"), ", ".join(temp_texts), ", ".join(temp_copies)])

# 转换为 DataFrame
merged_df = pd.DataFrame(merged_data, columns=["Real time", "文本", "copies"])

# 保存 Excel 文件
output_path = "D://PHD//数据//data//new//白象1_time_merged.xlsx"
with pd.ExcelWriter(output_path, engine="openpyxl") as writer:
    merged_df.to_excel(writer, index=False)

print("时间平滑处理完成，文本已合并，已保存至:", output_path)
